exports[`WorkerInfo component snapshot renders WorkerInfo component snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Card
    sizeHoriz="small"
    title=""
    type="default">
    <div
        className="noOverflowX_1hsn6c7">
        <SearchButton
            onBlurHandler={[Function]}
            onChangeHandler={[Function]}
            onFocusHandler={[Function]}
            onIconClick={[Function]}
            onSubmitHandler={[Function]} />
        <AlertButton />
        <div
            className="loadingWrapper_6tm9cs">
            <p>
                Loading...
            </p>
        </div>
    </div>
</Card>,
  "nodes": Array [
    <Card
      sizeHoriz="small"
      title=""
      type="default">
      <div
            className="noOverflowX_1hsn6c7">
            <SearchButton
                  onBlurHandler={[Function]}
                  onChangeHandler={[Function]}
                  onFocusHandler={[Function]}
                  onIconClick={[Function]}
                  onSubmitHandler={[Function]} />
            <AlertButton />
            <div
                  className="loadingWrapper_6tm9cs">
                  <p>
                        Loading...
                  </p>
            </div>
      </div>
</Card>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <WorkerInfo
        router={
                Object {
                        "params": Object {
                          "clientId": 1,
                          "id": 1,
                        },
                      }
        }
        tradesFetch={[Function]}
        workerInfoFetch={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": WorkerInfo {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "filterFocus": false,
        "params": null,
        "props": Object {
          "router": Object {
            "params": Object {
              "clientId": 1,
              "id": 1,
            },
          },
          "tradesFetch": [Function],
          "workerInfoFetch": [Function],
        },
        "refs": Object {},
        "state": Object {
          "groupFilter": null,
          "groupFilterList": null,
          "searchResults": Array [],
          "searchStr": "",
          "workerData": null,
          "workerList": null,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Card
          sizeHoriz="small"
          title=""
          type="default">
          <div
                    className="noOverflowX_1hsn6c7">
                    <SearchButton
                              onBlurHandler={[Function]}
                              onChangeHandler={[Function]}
                              onFocusHandler={[Function]}
                              onIconClick={[Function]}
                              onSubmitHandler={[Function]} />
                    <AlertButton />
                    <div
                              className="loadingWrapper_6tm9cs">
                              <p>
                                        Loading...
                              </p>
                    </div>
          </div>
</Card>,
        "_debugID": 2,
        "_renderedOutput": <Card
          sizeHoriz="small"
          title=""
          type="default">
          <div
                    className="noOverflowX_1hsn6c7">
                    <SearchButton
                              onBlurHandler={[Function]}
                              onChangeHandler={[Function]}
                              onFocusHandler={[Function]}
                              onIconClick={[Function]}
                              onSubmitHandler={[Function]} />
                    <AlertButton />
                    <div
                              className="loadingWrapper_6tm9cs">
                              <p>
                                        Loading...
                              </p>
                    </div>
          </div>
</Card>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <WorkerInfo
    router={
        Object {
            "params": Object {
              "clientId": 1,
              "id": 1,
            },
          }
    }
    tradesFetch={[Function]}
    workerInfoFetch={[Function]} />,
}
`;

exports[`WorkerInfo container snapshot renders WorkerInfo component snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Card
    sizeHoriz="small"
    title=""
    type="default">
    <div
        className="noOverflowX_1hsn6c7">
        <SearchButton
            onBlurHandler={[Function]}
            onChangeHandler={[Function]}
            onFocusHandler={[Function]}
            onIconClick={[Function]}
            onSubmitHandler={[Function]} />
        <AlertButton />
        <div
            className="loadingWrapper_6tm9cs">
            <p>
                Loading...
            </p>
        </div>
    </div>
</Card>,
  "nodes": Array [
    <Card
      sizeHoriz="small"
      title=""
      type="default">
      <div
            className="noOverflowX_1hsn6c7">
            <SearchButton
                  onBlurHandler={[Function]}
                  onChangeHandler={[Function]}
                  onFocusHandler={[Function]}
                  onIconClick={[Function]}
                  onSubmitHandler={[Function]} />
            <AlertButton />
            <div
                  className="loadingWrapper_6tm9cs">
                  <p>
                        Loading...
                  </p>
            </div>
      </div>
</Card>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <WorkerInfo
        router={
                Object {
                        "params": Object {
                          "clientId": 1,
                          "id": 1,
                        },
                      }
        }
        tradesFetch={[Function]}
        workerInfoFetch={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": WorkerInfo {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "filterFocus": false,
        "params": null,
        "props": Object {
          "router": Object {
            "params": Object {
              "clientId": 1,
              "id": 1,
            },
          },
          "tradesFetch": [Function],
          "workerInfoFetch": [Function],
        },
        "refs": Object {},
        "state": Object {
          "groupFilter": null,
          "groupFilterList": null,
          "searchResults": Array [],
          "searchStr": "",
          "workerData": null,
          "workerList": null,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Card
          sizeHoriz="small"
          title=""
          type="default">
          <div
                    className="noOverflowX_1hsn6c7">
                    <SearchButton
                              onBlurHandler={[Function]}
                              onChangeHandler={[Function]}
                              onFocusHandler={[Function]}
                              onIconClick={[Function]}
                              onSubmitHandler={[Function]} />
                    <AlertButton />
                    <div
                              className="loadingWrapper_6tm9cs">
                              <p>
                                        Loading...
                              </p>
                    </div>
          </div>
</Card>,
        "_debugID": 2,
        "_renderedOutput": <Card
          sizeHoriz="small"
          title=""
          type="default">
          <div
                    className="noOverflowX_1hsn6c7">
                    <SearchButton
                              onBlurHandler={[Function]}
                              onChangeHandler={[Function]}
                              onFocusHandler={[Function]}
                              onIconClick={[Function]}
                              onSubmitHandler={[Function]} />
                    <AlertButton />
                    <div
                              className="loadingWrapper_6tm9cs">
                              <p>
                                        Loading...
                              </p>
                    </div>
          </div>
</Card>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <WorkerInfo
    router={
        Object {
            "params": Object {
              "clientId": 1,
              "id": 1,
            },
          }
    }
    tradesFetch={[Function]}
    workerInfoFetch={[Function]} />,
}
`;
